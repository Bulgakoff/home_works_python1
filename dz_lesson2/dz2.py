# 1 Создать список и заполнить его элементами различных типов данных.
qwe = [12, 2.2, [1, 2, 3], {'name': 'Bob', 'age': 20}, 'string', (1, 2)]
# Реализовать скрипт проверки типа данных каждого элемента.
# Использовать функцию type() для проверки типа.
# Элементы списка можно не запрашивать у пользователя, а указать явно, в программе.
copy_qwe = qwe.copy()
for item in copy_qwe:
    print(type(item), end=' ')
print()
# Для списка реализовать обмен значений соседних элементов,---- НЕ ПОНЯЛ УСЛОВИЕ
print(copy_qwe[::-1])  # это раз вариант просто реверс
# т.е. Значениями обмениваются элементы с индексами 0 и 1, 2 и 3 и т.д.
# При нечетном количестве элементов последний сохранить на своем месте.
# Для заполнения списка элементов необходимо использовать функцию input().
# my_list1 = input('enter list  :').split()
# my_list2 = []  # [1, 3, 5]
# my_list3 = []  # [0, 2, 4, 6]
# for i in range(len(my_list1)):
#     if i % 2 != 0:
#         my_list2.append(my_list1[i])
#     else:
#         my_list3.append(my_list1[i])
# my_list4 = list(zip(my_list2, my_list3))
# if len(my_list2) > len(my_list3):
#     my_list4.append(my_list2[-1])
#     print(f'число элементов в исходном списке не четное : {my_list4}')
# if len(my_list2) < len(my_list3):
#     my_list4.append(my_list3[-1])
#     print(f'число элементов в исходном списке  не четное : {my_list4}')
# else:
#     print(f'число элементов в исходном списке четное : {my_list4}')

# Пользователь вводит месяц в виде целого числа от 1 до 12.
# Сообщить к какому времени года относится месяц (зима, весна, лето, осень).
# Напишите решения через list и через dict.
# u = int(input('enter number :  '))
# season_list = [[12, 1, 2], [3, 4, 5], [6, 7, 8], [9, 10, 11]]
# if u in season_list[0]:
#     print('winter')
# elif u in season_list[1]:
#     print('spring')
# elif u in season_list[2]:
#     print('Summer')
# elif u in season_list[3]:
#     print('Autumn')
# season_dict = {'winter': (12, 1, 2), 'spring': (3, 4, 5), 'Summer': (6, 7, 8), 'Autumn': (9, 10, 11)}
# if u in season_dict['winter']:
#     print('winter')
# elif u in season_dict['spring']:
#     print('spring')
# elif u in season_dict['Summer']:
#     print('Summer')
# elif u in season_dict['Autumn']:
#     print('Autumn')

# Пользователь вводит строку из нескольких слов, разделённых пробелами. Вывести каждое слово с новой строки.
# Строки необходимо пронумеровать. Если в слово длинное, выводить только первые 10 букв в слове.
# user_str = input('enter strings :   ').split()
# for i, item in enumerate(user_str):
#     if len(user_str[i]) > 10:
#         print(item[:9])
#     else:
#         print(item)

# Реализовать структуру «Рейтинг», представляющую собой не возрастающий набор натуральных чисел.
# У пользователя необходимо запрашивать новый элемент рейтинга.
# Если в рейтинге существуют элементы с одинаковыми значениями,
# то новый элемент с тем же значением должен разместиться после них.
# Подсказка. Например, набор натуральных чисел: 7, 5, 3, 3, 2.
# Пользователь ввел число 3. Результат: 7, 5, 3, 3, 3, 2.
# Пользователь ввел число 8. Результат: 8, 7, 5, 3, 3, 2.
# Пользователь ввел число 1. Результат: 7, 5, 3, 3, 2, 1.
# Набор натуральных чисел можно задать непосредственно в коде, например, my_list = [7, 5, 3, 3, 2].

# *Реализовать структуру данных «Товары». Она должна представлять собой список кортежей.
# Каждый кортеж хранит информацию об отдельном товаре.
# В кортеже должно быть два элемента — номер товара и словарь с параметрами
# (характеристиками товара: название, цена, количество, единица измерения).
# Структуру нужно сформировать программно, т.е. запрашивать все данные у пользователя.
# Пример готовой структуры:
# [
#     (1, {“название”: “компьютер”, “цена”: 20000, “количество”: 5, “eд”: “шт.”}),
#     (2, {“название”: “принтер”, “цена”: 6000, “количество”: 2, “eд”: “шт.”}),
#     (3, {“название”: “сканер”, “цена”: 2000, “количество”: 7, “eд”: “шт.”})
# ]
# Необходимо собрать аналитику о товарах. Реализовать словарь, в котором каждый ключ — характеристика товара,
# например название, а значение — список значений-характеристик, например список названий товаров.
# Пример:
# {
#     “название”: [“компьютер”, “принтер”, “сканер”],
#     “цена”: [20000, 6000, 2000],
#     “количество”: [5, 2, 7],
#     “ед”: [“шт.”]
# }
