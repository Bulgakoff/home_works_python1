# # Поработайте с переменными, создайте несколько, выведите на экран,
print('///////////////#1/////////////////////////////////////////////////////////')
a = 12
b = 'строка'
q, w, e, r, t, y = 1, 'qwe', 1.2, [1, 'sss', 3], (3, 4, 5), {2, 3, 4}
print(f'---->---{q}-{w}-{e}--{r}----{t}----{y}---{a}--{b}->')
print('///////////////#2//////////////////////////////////////////////////////////')
# # запросите у пользователя несколько чисел и строк и сохраните в переменные, выведите на экран.
user_id =int( input('Enter id :  '))
user_name = input('Enter your name :  ')
user_age =int( input('Enter age :  '))
print(f'Your name is {user_name}, your age is {user_age} and id {user_id}!')

print('///////////////#3///////////////////////////////////////////////////////////')
# # Пользователь вводит время в секундах. Переведите время в часы, минуты и
# # секунды и выведите в формате чч:мм:сс. Используйте форматирование строк.
time_user_sec = int(input('Enter time, sec  :  '))
t_minutes = time_user_sec / 60
t_hours = t_minutes / 60
print(
    f'Время введенное пользователем в секундах ===> {round(t_hours, 2)} (часов) : {round(t_minutes, 2)} (минут) : {time_user_sec} (сек)')

print('///////////////#4///////////////////////////////////////////////////////////')
# Узнайте у пользователя число n. Найдите сумму чисел n + nn + nnn. Например,
# пользователь ввёл число 3. Считаем 3 + 33 + 333 = 369.
n = input('Enter your number : ')
nn = n + n
nnn = n + n + n
result = int(n) + int(nn) + int(nnn)# не понял условие задания №4 //////////////////////////////
print(f'последовательная конкотенация и перевод в число с последующим суммированием до {result} ')

print('///////////////#5///////////////////////////////////////////////////////////')
# Пользователь вводит целое положительное число. Найдите самую большую цифру в числе.
# Для решения используйте цикл while и арифметические операции.
# способ 1
user_num_str = input('Enter your number : ')  # 24564
max_user_num = max(user_num_str)
print(f'способ 1 ==== {int(max_user_num)}')
# способ 2 из 1го
i = 0
max_user_number = None
while i < len(user_num_str):
    if max(user_num_str) == user_num_str[i]:
        max_user_number = user_num_str[i]
        break
    i += 1
print(f'способ 2 из 1го-------max(user_num)=={max_user_num}-----while == {int(max_user_number)}--')
# способ 3
user_num_int = [int(point) for point in list(user_num_str)]
max_number = 0
i = 0
while i < len(user_num_int):
    if max_number < user_num_int[i]:
        max_number = user_num_int[i]
    i += 1
print(f'=========={max_number}')
print('///////////////#6///////////////////////////////////////////////////////////')

# Запросите у пользователя значения выручки и издержек фирмы.
# Определите, с каким финансовым результатом работает фирма
# (прибыль — выручка больше издержек, или убыток — издержки больше выручки).
# Выведите соответствующее сообщение. Если фирма отработала с прибылью,
# вычислите рентабельность выручки (соотношение прибыли к выручке).
# Далее запросите численность сотрудников фирмы и определите прибыль фирмы в расчете на одного сотрудника.

revenue_user = int(input('Введите значения выручки  - '))
costs_user = int(input('Введите значения издержки  - '))
profit = revenue_user - costs_user
profitability = abs(profit / costs_user)
print(f' рентабельность фирмы  = {round(profitability)} и  прибыль = {profit} ye')
if profit > 0:
    print(f'Прибыль имеется  размере {profit} ye')
    quantity_workers = int(input('Введите количество сотрудников : '))
    if type(quantity_workers) == int and quantity_workers > 0:
        profit_one_worker = profit / quantity_workers
        print(f'Прибыль фирмы в расчете на одного сотрудника {profit_one_worker}  ye')
elif profit <= 0:
    print(f'Прибыли нет ')

print('/////////////// #7 ///////////////////////////////////////////////////////////')

# Спортсмен занимается ежедневными пробежками. В первый день его результат составил a километров.
# Каждый день спортсмен увеличивал результат на 10 % относительно предыдущего.
# Требуется определить номер дня, на который результат спортсмена составит не менее b километров.
# Программа должна принимать значения параметров a и b и  выводить одно натуральное число — номер дня.
# Например: a = 2, b = 3.
# Результат:
# 1-й день: 2
# 2-й день: 2,2
# 3-й день: 2,42
# 4-й день: 2,66
# 5-й день: 2,93
# 6-й день: 3,22
# Ответ: на 6-й день спортсмен достиг результата — не менее 3 км.

run_end = 3
run_curr = 2
time = 2
run_week = 6
while time < run_week or run_curr < run_end:
    run_curr += run_curr * 0.1
    print(f'В {time} день бегун пробежал {round(run_curr, 2)} км')
    time += 1
print()
print(f'За {time -1} дней бегун пробежал {round(run_curr, 2)} км')
print(f'Для преодоления {run_end} км бегуну потребуется {time - 1} дней')
